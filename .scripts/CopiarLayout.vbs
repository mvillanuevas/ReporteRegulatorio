On Error Resume Next

' Argumentos: libro origen, libro destino
Set objArgs = WScript.Arguments

libroOrigen = objArgs(0)      ' Ej: "C:\ruta\Libro1.xlsx"
libroDestino = objArgs(1)     ' Ej: "C:\ruta\Libro2.xlsx"
hojaDestinoNombre = objArgs(2) ' Ej: "INPUT"
anio = objArgs(3) ' Ej: "2025"
mes = objArgs(4) ' Ej: "5"

'libroOrigen = "C:\Users\HE678HU\OneDrive - EY\.Repsol\Reporte Regulatorio\4 - Abril\Files\Refacturacion_Test\Layout refacturación Junio 2025_NC.xlsx"
'libroDestino = "C:\Users\HE678HU\OneDrive - EY\.Repsol\Reporte Regulatorio\Timbrado\Refacturacion_regular_v2.xlsm"
'hojaDestinoNombre = "INPUT NC"
'anio = "2025" ' Ej: "2025"
'mes = "6" ' Ej: "5"

hojaOrigenNombre = "Layout_Copy"

' Crear instancia de Excel
Set objExcel = CreateObject("Excel.Application")

'Parámetro para indicar si se quiere visible la aplicación de Excel
objExcel.Application.Visible = False
'Evita movimiento de pantalla
objExcel.Application.ScreenUpdating = False
'Parámetro evitar mostrar pop ups de Excel
objExcel.Application.DisplayAlerts = False

' Abrir libros
Set wbOrigen = objExcel.Workbooks.Open(libroOrigen, 0)
Set wbDestino = objExcel.Workbooks.Open(libroDestino, 0)
Set wsOrigen = wbOrigen.Worksheets(hojaOrigenNombre)
Set wsDestino = wbDestino.Worksheets(hojaDestinoNombre)

' Verificar si los filtros están activos en la fila 1, si no, activarlos
If wsOrigen.AutoFilterMode Then
    wsOrigen.AutoFilterMode = False
End If

If Not wsOrigen.AutoFilterMode Then
    wsOrigen.Rows(6).AutoFilter
End If

If wsDestino.AutoFilterMode Then
    wsDestino.AutoFilterMode = False
End If

If Not wsDestino.AutoFilterMode Then
    wsDestino.Rows(1).AutoFilter
End If

' Limpiar rango destino antes de pegar (A2 hasta el final de AK en hoja destino)
lastRowDestino = wsDestino.Cells(wsDestino.Rows.Count, 1).End(-4162).Row
If lastRowDestino < 2 Then lastRowDestino = 1000 ' prevención mínima

wsDestino.Range("A2:AP" & lastRowDestino).ClearContents

' Encontrar la última fila con datos en la hoja origen, columna A
lastRow = wsOrigen.Cells(wsOrigen.Rows.Count, 1).End(-4162).Row  ' -4162 = xlUp
If lastRow < 7 Then lastRow = 10
' Definir rango a copiar desde A2 hasta AK última fila
Set rngCopy = wsOrigen.Range("A7:AK" & lastRow)
' Copiar rango definido
rngCopy.Copy

' Pegar en hoja destino, comenzando en A2
wsDestino.Range("A2").PasteSpecial -4163 ' -4163 = xlPasteValues

' En la hoja wsDestino columna AM pegar el año, columna AN pegar el mes, columna AO escribir un consecutivo, AP escribir 1
wsDestino.Range("AM2:AM" & lastRow).Value = anio ' Columna AM con el año actual
wsDestino.Range("AN2:AN" & lastRow).Value = mes ' Columna AN con el mes actual
wsDestino.Range("AO2:AO" & lastRow).Formula = "=ROW()-1" ' Columna AO con un consecutivo
wsDestino.Range("AP2:AP" & lastRow).Value = 1 ' Columna AP con el valor 1

wsDestino.Range("M2:M" & lastRow).NumberFormat = "dd/mm/yyyy"
wsDestino.Range("AH2:AH" & lastRow).NumberFormat = "dd/mm/yyyy"

' Guardar y cerrar
wbOrigen.Save
wbOrigen.Close

wbDestino.Save
wbDestino.Close

objExcel.Quit


' Validar errores
If Err.Number <> 0 Then
    ' Cerrar la aplicación de Excel
    objExcel.Quit
    Msg = "Error was generated by " & Err.Source & ". " & Err.Description
    WScript.StdOut.WriteLine Msg
Else
    WScript.StdOut.WriteLine "Script executed successfully."
End If